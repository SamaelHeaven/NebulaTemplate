import java.nio.file.*

plugins {
    id "java"
    id "application"
}

group = "org.example"
version = "1.0-SNAPSHOT"

application.getMainClass().set("${group}.Launcher")

compileJava {
    sourceCompatibility = "21"
    targetCompatibility = "21"
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation "com.github.SamaelHeaven:Nebula:master-SNAPSHOT"
    implementation "org.jetbrains:annotations:24.0.0"
    implementation "org.postgresql:postgresql:42.7.3"
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes "Main-Class": application.getMainClass()
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

tasks.register("generateCertificate") {
    doLast {
        if (!file("src/main/resources/environment/keystore.jks").exists()) {
            String password = "keystore_password"
            exec {
                commandLine "keytool", "-genkeypair", "-alias", "certificate", "-keyalg", "RSA", "-keysize", "2048", "-validity", "999999", "-keystore", "keystore.jks", "-storepass", password, "-keypass", password, "-dname", "CN=SelfSignedCertificate"
            }
            File sourceFile = file("keystore.jks")
            File destinationDir = file("src/main/resources/environment")
            Files.move(sourceFile.toPath(), destinationDir.toPath().resolve(sourceFile.name))
        }
    }
}

tasks.build.dependsOn(generateCertificate)